@page "/account/register"

@using Tamaris.Domains.Authorization
@using Tamaris.Web.Services

@attribute [AllowAnonymous]

@layout AuthenticationLayout
@inject NavigationManager navigationManager
@inject IAccountService authenticationService
@inject IDialogService dialogService

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registerRequest">
    <DataAnnotationsValidator />

    <div class="main-form">
        <div class="text-center">
            <div class="form-signin">
                <img class="mb-4" src="/images/tamaris_logo.png" alt="" width="72" height="57">
                <h1 class="h3 mb-3 fw-normal">Registering new user</h1>

                <div class="form-floating">
                    <input type="text" class="form-control textbox-top" id="inputUsername" autofocus placeholder="Username" @bind="registerRequest.UserName">
                    <label for="inputUsername">Username:</label>
                    <ValidationMessage For="@(() => registerRequest.UserName)" />
                </div>

                <div class="form-floating">
                    <input type="email" class="form-control textbox-middle" id="inputEmail" placeholder="name@example.com" @bind="registerRequest.Email">
                    <label for="inputEmail">E-mail:</label>
                    <ValidationMessage For="@(() => registerRequest.Email)" />
                </div>

                <div class="form-floating">
                    <input type="password" class="form-control textbox-middle" id="inputPassword" placeholder="Password" @bind="registerRequest.Password" />
                    <label for="inputPassword">Password:</label>
                    <ValidationMessage For="@(() => registerRequest.Password)" />
                </div>

                <div class="form-floating">
                    <input type="password" class="form-control textbox-bottom" id="inputPasswordConfirm" placeholder="Password confirm" @bind="registerRequest.PasswordConfirm" />
                    <label for="inputPasswordConfirm">Password confirm:</label>
                    <ValidationMessage For="@(() => registerRequest.PasswordConfirm)" />
                </div>


                <div class="checkbox mb-3">
                    <a href="/account/login">Already have an account?</a>
                </div>
                <button class="w-100 btn btn-lg btn-primary" type="submit">Create account</button>

                <label class="text-danger mt-3">@error</label>

                <p class="mt-5 mb-3 text-muted">&copy; 2021 by Flower Power Inc.</p>
            </div>
        </div>
    </div>

</EditForm>

@code
{
    RegisterRequest registerRequest { get; set; } = new RegisterRequest();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            var result = await authenticationService.Register(registerRequest);

            if(!result.IsRegistrationSuccessful)
            {
                error = result.Errors.FirstOrDefault();
            }
            else
            {
                await dialogService.ShowMessage(Modal, $"User {registerRequest.UserName} successfully created.");
                navigationManager.NavigateTo("/account/login");
            }
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

    [CascadingParameter]
    public IModalService Modal { get; set; }
}