@page "/account/forgotpassword"

@using Tamaris.Domains.Authorization
@using Tamaris.Web.Services
@using Tamaris.Web.Services.DataService
@using Blazored.Modal

@attribute [AllowAnonymous]

@layout AuthenticationLayout
@inject NavigationManager navigationManager
@inject IAccountDataService authenticationService
@inject IDialogService dialogService


<EditForm class="form-signin" OnSubmit="OnSubmit" Model="forgotPasswordRequest">
    <DataAnnotationsValidator />

    <div class="main-form">
        <div class="text-center">
            <div class="form-signin">
                <img class="mb-4" src="/images/tamaris_logo.png" alt="" width="72" height="57">
                <h1 class="h3 mb-3 fw-normal">Forgot password</h1>

                <div class="form-floating">
                    <input type="email" class="form-control" id="inputEmail" placeholder="name@example.com" @bind="forgotPasswordRequest.Email">
                    <label for="inputEmail">E-mail:</label>
                    <ValidationMessage For="@(() => forgotPasswordRequest.Email)" />
                </div>

                <div class="checkbox mb-3">
                    <a href="/account/login">Click here to login</a>
                </div>
                <button class="w-100 btn btn-lg btn-primary" type="submit">Send e-mail</button>

                <label class="text-danger mt-3">@error</label>

                <p class="mt-5 mb-3 text-muted">&copy; 2021 by Flower Power Inc.</p>
            </div>
        </div>
    </div>

</EditForm>

@code
{
    ForgotPasswordRequest forgotPasswordRequest { get; set; } = new ForgotPasswordRequest();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            forgotPasswordRequest.Callback = $"{navigationManager.BaseUri}account/resetpassword";

            var errors = await authenticationService.ForgotPassword(forgotPasswordRequest);

            if (!string.IsNullOrEmpty(errors))
            {
                error = errors;
            }
            else
            {
                await dialogService.ShowMessage(Modal, $"E-mail sent to {forgotPasswordRequest.Email}.");
                navigationManager.NavigateTo("/", true);
            }
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }


    [CascadingParameter]
    public IModalService Modal { get; set; }
}